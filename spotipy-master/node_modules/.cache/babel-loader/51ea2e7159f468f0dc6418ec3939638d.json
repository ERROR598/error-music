{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salah\\\\OneDrive\\\\\\u0633\\u0637\\u062D \\u0627\\u0644\\u0645\\u0643\\u062A\\u0628\\\\spotipy-master\\\\spotipy-master\\\\src\\\\components\\\\SongItem.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./SongItem.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { selectSong } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongItem = _ref => {\n  _s();\n\n  let {\n    song,\n    index,\n    selectSong,\n    selectedSongId,\n    playerState\n  } = _ref;\n  const [, setHovered] = useState(false);\n  const dispatch = useDispatch();\n\n  const selector = () => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      draggable: \"false\",\n      href: song.url,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        role: \"img\",\n        height: \"24\",\n        width: \"24\",\n        viewBox: \"0 0 24 24\",\n        className: \"download-link\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M11.5 0C5.149 0 0 5.148 0 11.5 0 17.851 5.149 23 11.5 23S23 17.851 23 11.5C23 5.148 17.851 0 11.5 0zm0 22C5.71 22 1 17.29 1 11.5S5.71 1 11.5 1 22 5.71 22 11.5 17.29 22 11.5 22zm.499-6.842V5h-1v10.149l-3.418-3.975-.758.652 4.678 5.44 4.694-5.439-.757-.653-3.439 3.984z\",\n          fill: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }; // Set song as active\n\n\n  const now_selected = selectedSongId === song.id ? \"active\" : \"\"; // set the gif\n\n  const phaser = () => {\n    if (selectedSongId === song.id && playerState) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: \"/playing.gif\",\n          id: \"focused\",\n          className: \"small-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `song-item`,\n    id: now_selected,\n    onMouseOver: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    onClick: () => {\n      selectSong(song);\n      dispatch({\n        type: \"PLAYER_STATE_SELECTED\",\n        payload: 1\n      });\n    },\n    children: [phaser(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: song.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: selector()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongItem, \"BOh+8ZY4svMfbN84hHzuwJhKtCg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SongItem;\n\nconst mapStateToProps = state => {\n  return {\n    selectedSongId: state.selectedSongId,\n    playerState: state.playerState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSong\n})(SongItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"sources":["C:/Users/salah/OneDrive/سطح المكتب/spotipy-master/spotipy-master/src/components/SongItem.js"],"names":["useState","connect","useDispatch","selectSong","SongItem","song","index","selectedSongId","playerState","setHovered","dispatch","selector","url","now_selected","id","phaser","type","payload","name","author","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,MAAMC,QAAQ,GAAG,QAA8D;AAAA;;AAAA,MAA7D;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeH,IAAAA,UAAf;AAA2BI,IAAAA,cAA3B;AAA2CC,IAAAA;AAA3C,GAA6D;AAC3E,QAAM,GAAGC,UAAH,IAAiBT,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACnB,wBACI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAEN,IAAI,CAACO,GAAhC;AAAA,6BACI;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,MAAM,EAAC,IAFX;AAGI,QAAA,KAAK,EAAC,IAHV;AAII,QAAA,OAAO,EAAC,WAJZ;AAKI,QAAA,SAAS,EAAC,eALd;AAAA,+BAOI;AACI,UAAA,CAAC,EAAC,6QADN;AAEI,UAAA,IAAI,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD,CAJ2E,CAuB3E;;;AACA,QAAMC,YAAY,GAAGN,cAAc,KAAKF,IAAI,CAACS,EAAxB,GAA6B,QAA7B,GAAwC,EAA7D,CAxB2E,CA0B3E;;AACA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAIR,cAAc,KAAKF,IAAI,CAACS,EAAxB,IAA8BN,WAAlC,EAA+C;AAC3C,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAC,EADR;AAEI,UAAA,GAAG,EAAC,cAFR;AAGI,UAAA,EAAE,EAAC,SAHP;AAII,UAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXD,MAWO;AACH,0BAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBF,KAAK,GAAG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GAfD;;AAgBA,sBACI;AACI,IAAA,SAAS,EAAG,WADhB;AAEI,IAAA,EAAE,EAAEO,YAFR;AAGI,IAAA,WAAW,EAAE,MAAMJ,UAAU,CAAC,IAAD,CAHjC;AAII,IAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAJlC;AAKI,IAAA,OAAO,EAAE,MAAM;AACXN,MAAAA,UAAU,CAACE,IAAD,CAAV;AACAK,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,uBAAR;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OAAD,CAAR;AACH,KARL;AAAA,eAUKF,MAAM,EAVX,eAWI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBV,IAAI,CAACa;AAA5B;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBb,IAAI,CAACc;AAA9B;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BR,QAAQ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5DD;;GAAMP,Q;UAEeF,W;;;KAFfE,Q;;AA8DN,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,cAAc,EAAEc,KAAK,CAACd,cADnB;AAEHC,IAAAA,WAAW,EAAEa,KAAK,CAACb;AAFhB,GAAP;AAIH,CALD;;AAOA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./SongItem.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nconst SongItem = ({ song, index, selectSong, selectedSongId, playerState }) => {\n    const [, setHovered] = useState(false);\n    const dispatch = useDispatch();\n\n    const selector = () => {\n        return (\n            <a draggable=\"false\" href={song.url}>\n                <svg\n                    role=\"img\"\n                    height=\"24\"\n                    width=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    className=\"download-link\"\n                >\n                    <path\n                        d=\"M11.5 0C5.149 0 0 5.148 0 11.5 0 17.851 5.149 23 11.5 23S23 17.851 23 11.5C23 5.148 17.851 0 11.5 0zm0 22C5.71 22 1 17.29 1 11.5S5.71 1 11.5 1 22 5.71 22 11.5 17.29 22 11.5 22zm.499-6.842V5h-1v10.149l-3.418-3.975-.758.652 4.678 5.44 4.694-5.439-.757-.653-3.439 3.984z\"\n                        fill=\"currentColor\"\n                    ></path>\n                </svg>\n            </a>\n        );\n    };\n\n    // Set song as active\n    const now_selected = selectedSongId === song.id ? \"active\" : \"\";\n\n    // set the gif\n    const phaser = () => {\n        if (selectedSongId === song.id && playerState) {\n            return (\n                <div className=\"index\">\n                    <img\n                        alt=\"\"\n                        src=\"/playing.gif\"\n                        id=\"focused\"\n                        className=\"small-icon\"\n                    />\n                </div>\n            );\n        } else {\n            return <div className=\"index\">{index + 1}</div>;\n        }\n    };\n    return (\n        <div\n            className={`song-item`}\n            id={now_selected}\n            onMouseOver={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onClick={() => {\n                selectSong(song);\n                dispatch({ type: \"PLAYER_STATE_SELECTED\", payload: 1 });\n            }}\n        >\n            {phaser()}\n            <div className=\"name\">{song.name}</div>\n            <div className=\"author\">{song.author}</div>\n            <div className=\"selector\">{selector()}</div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedSongId: state.selectedSongId,\n        playerState: state.playerState,\n    };\n};\n\nexport default connect(mapStateToProps, { selectSong })(SongItem);\n"]},"metadata":{},"sourceType":"module"}